{"version":3,"sources":["Recipe.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Recipe","title","calories","image","ingredients","className","Style","recipe","map","ingredient","i","text","Date","now","src","alt","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","haveFetched","setHaveFetched","useEffect","getRecipes","a","fetch","response","json","data","hits","DisplayRecipes","props","length","children","onSubmit","e","preventDefault","value","onChange","target","type","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"yQAoBeA,EAjBA,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACtC,OACI,sBAAKC,UAAWC,IAAMC,OAAtB,UACI,6BAAKN,IACL,6BACKG,EAAYI,KAAI,SAACC,EAAYC,GAAb,OACb,6BACKD,EAAWE,MADPC,KAAKC,MAAQH,QAK9B,2CAAcR,KACd,qBAAKG,UAAWC,IAAMH,MAAOW,IAAKX,EAAOY,IAAI,SC6D1CC,EAxEH,WACV,IADgB,EAIcC,mBAAS,IAJvB,mBAITC,EAJS,KAIAC,EAJA,OAKYF,mBAAS,IALrB,mBAKTG,EALS,KAKDC,EALC,OAMUJ,mBAAS,WANnB,mBAMTK,EANS,KAMFC,EANE,OAOsBN,oBAAS,GAP/B,mBAOTO,EAPS,KAOIC,EAPJ,KAShBC,qBAAU,WACRC,MACC,CAACL,IAEJ,IAAMK,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,mCAAD,OACSP,EADT,mBAbf,WAae,oBAZd,qCAWG,cACXQ,EADW,gBAIEA,EAASC,OAJX,OAIXC,EAJW,OAKjBb,EAAWa,EAAKC,MAChBR,GAAe,GANE,2CAAH,qDAmBVS,EAAiB,SAACC,GACtB,OAAuB,IAAnBjB,EAAQkB,SAAgC,IAAhBZ,EAExB,mBAAGnB,UAAU,gBAAb,yEAMG8B,EAAME,UAGf,OACE,sBAAKhC,UAAU,MAAf,UACE,uBAAMiC,SApBQ,SAAAC,GAChBA,EAAEC,iBACFjB,EAASH,GACTC,EAAU,KAiBmBhB,UAAU,cAArC,UACE,uBACEoC,MAAOrB,EACPsB,SA3Ba,SAAAH,GACnBlB,EAAUkB,EAAEI,OAAOF,QA2BbpC,UAAU,aACVuC,KAAK,SAEP,wBAAQvC,UAAU,gBAAgBuC,KAAK,SAAvC,uBAEF,cAACV,EAAD,UACE,qBAAK7B,UAAU,UAAf,SACGa,EAAQV,KAAI,SAACD,EAAQG,GAAT,OACT,cAAC,EAAD,CAEET,MAAOM,EAAOA,OAAOsC,MACrB3C,SAAUK,EAAOA,OAAOL,SACxBC,MAAOI,EAAOA,OAAOJ,MACrBC,YAAaG,EAAOA,OAAOH,aAJtBQ,KAAKC,MAAQH,cCnDnBoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,yB","file":"static/js/main.7bb0435f.chunk.js","sourcesContent":["import React from 'react';\r\nimport Style from './recipe.module.css';\r\n\r\nconst Recipe = ({ title, calories, image, ingredients }) => {\r\n    return (\r\n        <div className={Style.recipe}>\r\n            <h1>{title}</h1>\r\n            <ol>\r\n                {ingredients.map((ingredient, i) => (\r\n                    <li key={Date.now() + i}>\r\n                        {ingredient.text}\r\n                    </li>\r\n                ))}\r\n            </ol>\r\n            <p>Calories: {calories}</p>\r\n            <img className={Style.image} src={image} alt=\"\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Recipe;","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Recipe from './Recipe';\n\nconst App = () => {\n  const APP_ID = 'f094bab6';\n  const APP_KEY = '634ae845483475eb5b7749cd5e6a5941';\n\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState([]);\n  const [query, setQuery] = useState('chicken');\n  const [haveFetched, setHaveFetched] = useState(false);\n\n  useEffect(() => {\n    getRecipes();\n  }, [query]);\n\n  const getRecipes = async () => {\n    const response = await fetch(\n      `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`\n    );\n    const data = await response.json();\n    setRecipes(data.hits);\n    setHaveFetched(true);\n  };\n\n  const updateSearch = e => {\n    setSearch(e.target.value);\n  };\n\n  const getSearch = e => {\n    e.preventDefault();\n    setQuery(search);\n    setSearch('');\n  };\n\n  const DisplayRecipes = (props) => {\n    if (recipes.length === 0 && haveFetched === true) {\n      return (\n        <p className=\"nothing-found\">\n          Sorry, nothing was found. \n          Try searching for something else.\n        </p>\n      )\n    }\n    return props.children;\n  };\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={getSearch} className=\"search-form\">\n        <input\n          value={search} \n          onChange={updateSearch} \n          className=\"search-bar\" \n          type=\"text\"\n        />\n        <button className=\"search-button\" type=\"submit\">Search</button>\n      </form>\n      <DisplayRecipes>\n        <div className=\"recipes\">\n          {recipes.map((recipe, i) => (\n              <Recipe\n                key={Date.now() + i}\n                title={recipe.recipe.label}\n                calories={recipe.recipe.calories}\n                image={recipe.recipe.image}\n                ingredients={recipe.recipe.ingredients}\n            />\n          ))}\n        </div>\n      </DisplayRecipes>  \n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__2-NP9\",\"image\":\"recipe_image__1Sxxw\"};"],"sourceRoot":""}